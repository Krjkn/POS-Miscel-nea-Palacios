
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author thewo
 */
public class Producto extends javax.swing.JFrame {

    /**
     * Creates new form Producto
     */
    public Producto() {

        initComponents();
        mostrarDatos();
    }

    Producto(String id, String lote, String nombre, String descripcion, int Stock, Date fecha, double precio, double descuento) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        Lote = new javax.swing.JMenuItem();
        Nombre = new javax.swing.JMenuItem();
        Descripcion = new javax.swing.JMenuItem();
        Stock = new javax.swing.JMenuItem();
        Fecha_Cad = new javax.swing.JMenuItem();
        Precio = new javax.swing.JMenuItem();
        Descuento = new javax.swing.JMenuItem();
        Precio_Compra = new javax.swing.JMenuItem();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtBusqueda = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        updateButton = new javax.swing.JButton();
        checkStockButton = new javax.swing.JButton();
        back = new javax.swing.JButton();
        homePanel = new javax.swing.JPanel();
        insertPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        lote = new javax.swing.JTextField();
        nombre = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        stock = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descripcion = new javax.swing.JTextArea();
        precio_venta = new javax.swing.JTextField();
        GrabarButton = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        descuento = new javax.swing.JTextField();
        fecha_cad1 = new com.toedter.calendar.JDateChooser();
        precio_compra = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        checkStockPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        checkStockTable = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        stockUpdateId = new javax.swing.JTextField();
        updateStockButton = new javax.swing.JButton();
        delEntry = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        delEntryModel = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        stockUpdateSetQty = new javax.swing.JTextField();

        Lote.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/barcode.png"))); // NOI18N
        Lote.setText("Modificar Lote");
        Lote.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LoteMouseClicked(evt);
            }
        });
        Lote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoteActionPerformed(evt);
            }
        });
        jPopupMenu1.add(Lote);

        Nombre.setText("Modificar Nombre");
        Nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NombreActionPerformed(evt);
            }
        });
        jPopupMenu1.add(Nombre);

        Descripcion.setText("Modificar Descripcion");
        Descripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DescripcionActionPerformed(evt);
            }
        });
        jPopupMenu1.add(Descripcion);

        Stock.setText("Modificar Existencias");
        jPopupMenu1.add(Stock);

        Fecha_Cad.setText("Modificar Fecha de Caducidad");
        jPopupMenu1.add(Fecha_Cad);

        Precio.setText("Modificar Precio");
        Precio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrecioActionPerformed(evt);
            }
        });
        jPopupMenu1.add(Precio);

        Descuento.setText("Descuento");
        Descuento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DescuentoActionPerformed(evt);
            }
        });
        jPopupMenu1.add(Descuento);

        Precio_Compra.setText("Precio Compra");
        Precio_Compra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Precio_CompraActionPerformed(evt);
            }
        });
        jPopupMenu1.add(Precio_Compra);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Panel de Productos");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setMinimumSize(new java.awt.Dimension(1199, 699));
        jPanel3.setPreferredSize(new java.awt.Dimension(1199, 699));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(1, 110, 145));
        jPanel2.setPreferredSize(new java.awt.Dimension(1200, 72));

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Panel de Productos");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));

        jLabel6.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Buscar");

        txtBusqueda.setBackground(new java.awt.Color(0, 173, 188));
        txtBusqueda.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txtBusqueda.setForeground(new java.awt.Color(255, 255, 255));
        txtBusqueda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBusqueda.setBorder(null);
        txtBusqueda.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtBusqueda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtBusquedaMouseClicked(evt);
            }
        });
        txtBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBusquedaActionPerformed(evt);
            }
        });
        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyPressed(evt);
            }
        });

        searchButton.setBackground(new java.awt.Color(0, 121, 107));
        searchButton.setFont(new java.awt.Font("Roboto", 0, 20)); // NOI18N
        searchButton.setForeground(new java.awt.Color(255, 255, 255));
        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8_Search_40px.png"))); // NOI18N
        searchButton.setToolTipText("Search");
        searchButton.setBorderPainted(false);
        searchButton.setContentAreaFilled(false);
        searchButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        searchButton.setOpaque(true);
        searchButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                searchButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                searchButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                searchButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                searchButtonMouseReleased(evt);
            }
        });
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 329, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))))
        );

        jPanel3.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 60));

        jPanel4.setBackground(new java.awt.Color(0, 150, 136));

        updateButton.setBackground(new java.awt.Color(0, 150, 136));
        updateButton.setFont(new java.awt.Font("Roboto", 0, 20)); // NOI18N
        updateButton.setForeground(new java.awt.Color(255, 255, 255));
        updateButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Agg.png"))); // NOI18N
        updateButton.setText("Nueva entrada ");
        updateButton.setToolTipText("Introduce nuevo producto");
        updateButton.setBorder(null);
        updateButton.setBorderPainted(false);
        updateButton.setContentAreaFilled(false);
        updateButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        updateButton.setOpaque(true);
        updateButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                updateButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                updateButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                updateButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                updateButtonMouseReleased(evt);
            }
        });
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        checkStockButton.setBackground(new java.awt.Color(0, 150, 136));
        checkStockButton.setFont(new java.awt.Font("Roboto", 0, 20)); // NOI18N
        checkStockButton.setForeground(new java.awt.Color(255, 255, 255));
        checkStockButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/inventory.png"))); // NOI18N
        checkStockButton.setText("Comprobar existencias ");
        checkStockButton.setToolTipText("Estado de existentcias");
        checkStockButton.setBorder(null);
        checkStockButton.setBorderPainted(false);
        checkStockButton.setContentAreaFilled(false);
        checkStockButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        checkStockButton.setOpaque(true);
        checkStockButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkStockButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                checkStockButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                checkStockButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                checkStockButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                checkStockButtonMouseReleased(evt);
            }
        });
        checkStockButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkStockButtonActionPerformed(evt);
            }
        });

        back.setBackground(new java.awt.Color(0, 150, 136));
        back.setFont(new java.awt.Font("Roboto", 0, 20)); // NOI18N
        back.setForeground(new java.awt.Color(255, 255, 255));
        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/back.png"))); // NOI18N
        back.setText("Regresar");
        back.setToolTipText("Regresar al Menú Principal");
        back.setBorder(null);
        back.setBorderPainted(false);
        back.setContentAreaFilled(false);
        back.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        back.setOpaque(true);
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                backMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                backMouseReleased(evt);
            }
        });
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(updateButton)
                .addGap(34, 34, 34)
                .addComponent(checkStockButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(579, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkStockButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel3.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 60, 1210, 50));

        homePanel.setBackground(new java.awt.Color(255, 255, 255));
        homePanel.setLayout(new java.awt.CardLayout());

        insertPanel.setBackground(new java.awt.Color(255, 255, 255));
        insertPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Roboto", 0, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 77, 64));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Detalles Del Producto ");
        insertPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 24, 1200, -1));

        jSeparator1.setBackground(new java.awt.Color(0, 77, 64));
        jSeparator1.setForeground(new java.awt.Color(0, 77, 64));
        jSeparator1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jSeparator1.setOpaque(true);
        jSeparator1.setPreferredSize(new java.awt.Dimension(0, 1));
        insertPanel.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 51, 200, -1));

        jLabel4.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 77, 64));
        jLabel4.setText("Codigo de Barras:");
        insertPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 70, 140, -1));

        lote.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        lote.setForeground(new java.awt.Color(0, 77, 64));
        lote.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 77, 64)));
        lote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loteActionPerformed(evt);
            }
        });
        lote.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                loteKeyPressed(evt);
            }
        });
        insertPanel.add(lote, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 70, 362, -1));

        nombre.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        nombre.setForeground(new java.awt.Color(0, 77, 64));
        nombre.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 77, 64)));
        nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreActionPerformed(evt);
            }
        });
        nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nombreKeyPressed(evt);
            }
        });
        insertPanel.add(nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 110, 362, -1));

        jLabel5.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 77, 64));
        jLabel5.setText("Nombre:");
        insertPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 110, 104, -1));

        stock.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        stock.setForeground(new java.awt.Color(0, 77, 64));
        stock.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 77, 64)));
        stock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockActionPerformed(evt);
            }
        });
        insertPanel.add(stock, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 230, 110, -1));

        jLabel7.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 77, 64));
        jLabel7.setText("Precio Compra :");
        insertPanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 190, 104, -1));

        jLabel8.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 77, 64));
        jLabel8.setText("Fecha de Caducidad:");
        insertPanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 270, 140, -1));

        jLabel9.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 77, 64));
        jLabel9.setText("Descripción del producto: ");
        insertPanel.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 310, 150, -1));

        descripcion.setColumns(20);
        descripcion.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        descripcion.setLineWrap(true);
        descripcion.setRows(5);
        descripcion.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 77, 64), 1, true));
        descripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                descripcionKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(descripcion);

        insertPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 320, 370, 190));

        precio_venta.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        precio_venta.setForeground(new java.awt.Color(0, 77, 64));
        precio_venta.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 77, 64)));
        precio_venta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                precio_ventaActionPerformed(evt);
            }
        });
        precio_venta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                precio_ventaKeyPressed(evt);
            }
        });
        insertPanel.add(precio_venta, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 150, 180, -1));

        GrabarButton.setBackground(new java.awt.Color(0, 77, 64));
        GrabarButton.setFont(new java.awt.Font("Roboto", 0, 20)); // NOI18N
        GrabarButton.setForeground(new java.awt.Color(255, 255, 255));
        GrabarButton.setText("Agregar");
        GrabarButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        GrabarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GrabarButtonActionPerformed(evt);
            }
        });
        insertPanel.add(GrabarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 460, 130, 50));

        jLabel15.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 77, 64));
        jLabel15.setText("Descuento:");
        insertPanel.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 340, 104, -1));

        jLabel16.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 77, 64));
        jLabel16.setText("Cantidad:");
        insertPanel.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 230, 104, -1));
        insertPanel.add(descuento, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 340, 130, -1));

        fecha_cad1.setDateFormatString("yyyy-MM-dd");
        fecha_cad1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fecha_cad1MouseClicked(evt);
            }
        });
        insertPanel.add(fecha_cad1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 270, 140, -1));

        precio_compra.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        precio_compra.setForeground(new java.awt.Color(0, 77, 64));
        precio_compra.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 77, 64)));
        precio_compra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                precio_compraActionPerformed(evt);
            }
        });
        precio_compra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                precio_compraKeyPressed(evt);
            }
        });
        insertPanel.add(precio_compra, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 190, 180, -1));

        jLabel17.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 77, 64));
        jLabel17.setText("Precio Venta: ");
        insertPanel.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 150, 104, -1));

        homePanel.add(insertPanel, "card3");

        checkStockPanel.setBackground(new java.awt.Color(255, 255, 255));

        checkStockTable.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        checkStockTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id","Lote","Nombre", "Descripcion", "Stock","Fecha de Caducidad","Precio Publico","Precio Compra","Descuento"    }
        ));
        checkStockTable.setToolTipText("");
        checkStockTable.setComponentPopupMenu(jPopupMenu1);
        checkStockTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        checkStockTable.setRowHeight(20);
        checkStockTable.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                checkStockTableMouseMoved(evt);
            }
        });
        checkStockTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkStockTableMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                checkStockTableMouseEntered(evt);
            }
        });
        jScrollPane3.setViewportView(checkStockTable);

        jLabel10.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 77, 64));
        jLabel10.setText("Introduce ID del Producto:");

        jLabel11.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 77, 64));
        jLabel11.setText("Añadir al Stock:");

        stockUpdateId.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        stockUpdateId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockUpdateIdActionPerformed(evt);
            }
        });

        updateStockButton.setBackground(new java.awt.Color(0, 77, 64));
        updateStockButton.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        updateStockButton.setForeground(new java.awt.Color(255, 255, 255));
        updateStockButton.setText("Stock actualizado");
        updateStockButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateStockButtonActionPerformed(evt);
            }
        });

        delEntry.setBackground(new java.awt.Color(255, 0, 0));
        delEntry.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        delEntry.setForeground(new java.awt.Color(255, 255, 255));
        delEntry.setText("Articulo borrado");
        delEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delEntryActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 0, 0));
        jLabel12.setText("Articulo eliminado:");

        jLabel13.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 0, 0));
        jLabel13.setText("Introduzca modelo:");

        delEntryModel.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        delEntryModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delEntryModelActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 77, 64));
        jLabel14.setText("Que Cantidad:");

        stockUpdateSetQty.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        stockUpdateSetQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockUpdateSetQtyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout checkStockPanelLayout = new javax.swing.GroupLayout(checkStockPanel);
        checkStockPanel.setLayout(checkStockPanelLayout);
        checkStockPanelLayout.setHorizontalGroup(
            checkStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkStockPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(checkStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(checkStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(checkStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(checkStockPanelLayout.createSequentialGroup()
                        .addComponent(stockUpdateId, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(stockUpdateSetQty, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(delEntryModel, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(checkStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(updateStockButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(delEntry, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(86, 86, 86))
            .addGroup(checkStockPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        checkStockPanelLayout.setVerticalGroup(
            checkStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkStockPanelLayout.createSequentialGroup()
                .addGroup(checkStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(checkStockPanelLayout.createSequentialGroup()
                        .addGap(454, 454, 454)
                        .addGroup(checkStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(checkStockPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(checkStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(checkStockPanelLayout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(stockUpdateId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(checkStockPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(checkStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(stockUpdateSetQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(updateStockButton))))))
                .addGap(18, 18, 18)
                .addGroup(checkStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delEntryModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delEntry))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        homePanel.add(checkStockPanel, "card4");

        jPanel3.add(homePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 1200, 570));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel1MouseClicked

    private void updateButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_updateButtonMouseClicked

    private void updateButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateButtonMouseEntered
        // TODO add your handling code here:;
        updateButton.setBackground(new Color(0, 137, 123));
    }//GEN-LAST:event_updateButtonMouseEntered

    private void updateButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateButtonMouseExited
        // TODO add your handling code here:
        updateButton.setBackground(new Color(0, 150, 136));
    }//GEN-LAST:event_updateButtonMouseExited

    private void updateButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateButtonMousePressed
        // TODO add your handling code here:
        updateButton.setBackground(new Color(0, 77, 64));
    }//GEN-LAST:event_updateButtonMousePressed

    private void updateButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateButtonMouseReleased
        // TODO add your handling code here:
        updateButton.setBackground(new Color(0, 150, 136));
    }//GEN-LAST:event_updateButtonMouseReleased

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        homePanel.removeAll();
        homePanel.add(insertPanel);
        homePanel.repaint();
        homePanel.revalidate();
        lote.requestFocus();
    }//GEN-LAST:event_updateButtonActionPerformed

    private void checkStockButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkStockButtonMousePressed
        // TODO add your handling code here:
        checkStockButton.setBackground(new Color(0, 77, 64));
    }//GEN-LAST:event_checkStockButtonMousePressed

    private void checkStockButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkStockButtonMouseReleased
        // TODO add your handling code here:
        checkStockButton.setBackground(new Color(0, 150, 136));
    }//GEN-LAST:event_checkStockButtonMouseReleased

    private void checkStockButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkStockButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_checkStockButtonMouseClicked

    private void checkStockButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkStockButtonMouseExited
        // TODO add your handling code here:
        checkStockButton.setBackground(new Color(0, 150, 136));
    }//GEN-LAST:event_checkStockButtonMouseExited

    private void checkStockButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkStockButtonMouseEntered
        // TODO add your handling code here:
        checkStockButton.setBackground(new Color(0, 137, 123));
    }//GEN-LAST:event_checkStockButtonMouseEntered

    private void checkStockButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkStockButtonActionPerformed
        homePanel.removeAll();
        homePanel.add(checkStockPanel);
        homePanel.repaint();
        homePanel.revalidate();
        txtBusqueda.requestFocus();

        mostrarDatos();

    }//GEN-LAST:event_checkStockButtonActionPerformed

    private void loteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loteActionPerformed

    private void nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreActionPerformed

    private void stockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stockActionPerformed

    private void precio_ventaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_precio_ventaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_precio_ventaActionPerformed

    private void GrabarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GrabarButtonActionPerformed
        int wrong = 0;
        String fecha = ((JTextField)fecha_cad1.getDateEditor().getUiComponent()).getText();
        String descuentoText = descuento.getText();
        if (fecha.isEmpty()) {
            fecha = null;
        }
        int desc;

        if (descuentoText.isEmpty()) {
            desc = 0;
        } else {
            desc = Integer.parseInt(descuentoText);
        }

        try{
            ProductDB.insertIntoProductDB(lote.getText(), nombre.getText(), descripcion.getText(),
                    Double.parseDouble(precio_venta.getText()),Double.parseDouble(precio_compra.getText()), Integer.parseInt(stock.getText()), fecha, desc);

            lote.setText("");
            nombre.setText("");
            stock.setText("");
            precio_venta.setText("");
            precio_compra.setText("");
            descripcion.setText("");
            fecha_cad1.setDate(null);
            descuento.setText("");
        } catch(Exception e){
            wrong++;
            JOptionPane.showMessageDialog(null, "Error ocurrido al agregar, compruebe los campos");

            if(wrong >= 3){
                lote.setText("");
                nombre.setText("");
                stock.setText("");
                precio_venta.setText("");
                descripcion.setText("");
                fecha_cad1.setDate(null);
                descuento.setText("");
                wrong = 0;
            } else {
                
            }
        }


    }//GEN-LAST:event_GrabarButtonActionPerformed

    private void stockUpdateIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockUpdateIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stockUpdateIdActionPerformed

    private void updateStockButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateStockButtonActionPerformed
        try{
            int ID_Prod = Integer.parseInt(stockUpdateId.getText());
            int Stock = Integer.parseInt(stockUpdateSetQty.getText());

            ProductDB.flag = true;
            ProductDB.updateProductDB(Stock, ID_Prod);

            stockUpdateId.setText("");
            stockUpdateSetQty.setText("");
            mostrarDatos();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Error, Introducte un valor valido");
        }
        mostrarDatos();
    }//GEN-LAST:event_updateStockButtonActionPerformed

    private void delEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delEntryActionPerformed
        try{
            int del = Integer.parseInt(delEntryModel.getText());
            ProductDB.delete(del);

        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        mostrarDatos();
    }//GEN-LAST:event_delEntryActionPerformed

    private void delEntryModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delEntryModelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_delEntryModelActionPerformed

    private void stockUpdateSetQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockUpdateSetQtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stockUpdateSetQtyActionPerformed

    private void fecha_cad1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fecha_cad1MouseClicked
        
    }//GEN-LAST:event_fecha_cad1MouseClicked

    private void txtBusquedaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBusquedaMouseClicked
        // TODO add your handling code here:
        txtBusqueda.setText("");
    }//GEN-LAST:event_txtBusquedaMouseClicked

    private void txtBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBusquedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBusquedaActionPerformed

    private void searchButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_searchButtonMouseClicked

    private void searchButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchButtonMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_searchButtonMouseEntered

    private void searchButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchButtonMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_searchButtonMouseExited

    private void searchButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchButtonMousePressed
        // TODO add your handling code here:
        searchButton.setBackground(new Color(0, 77, 64));
    }//GEN-LAST:event_searchButtonMousePressed

    private void searchButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchButtonMouseReleased
        // TODO add your handling code here:
        searchButton.setBackground(new Color(0, 121, 107));
    }//GEN-LAST:event_searchButtonMouseReleased

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        homePanel.removeAll();
        homePanel.add(checkStockPanel);
        homePanel.repaint();
        homePanel.revalidate();
        
        String consulta = txtBusqueda.getText();
        String sql = "SELECT * FROM productos WHERE Nombre LIKE '%" + consulta + "%' OR ID_Prod LIKE '%" + consulta +
                "%' OR Descripcion LIKE '%" + consulta + "%' OR Lote LIKE '%" + consulta + "%' OR Fecha_Cad LIKE '%" + consulta + "%';";

    
    try {
        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/miscelanea_palacios", "root", "");
        Statement stmt = conn.createStatement();
        ResultSet rs = stmt.executeQuery(sql);
        
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("Lote");
        model.addColumn("Nombre");
        model.addColumn("Descripción");
        model.addColumn("Stock");
        model.addColumn("Fecha de Caducidad");
        model.addColumn("Precio Público");
        model.addColumn("Precio Compra");
        model.addColumn("Descuento");
        
        if (!rs.isBeforeFirst()) { // Si el ResultSet está vacío
            JOptionPane.showMessageDialog(null, "Sin resultados para: '" + consulta + "'.");
            //comentar cuando termine 
//            homePanel.removeAll();
//            homePanel.add(insertPanel);
//            homePanel.repaint();
//            homePanel.revalidate();
//            lote.requestFocus();
//            lote.setText(consulta);
            
             }
        while (rs.next()) {
            String id = rs.getString("ID_Prod");
            String lote = rs.getString("Lote");
            String nombre = rs.getString("nombre");
            String descripcion = rs.getString("descripcion");
            int Stock = rs.getInt("Stock");
            Date fecha = rs.getDate("Fecha_Cad");
            double precio_venta = rs.getDouble("Precio_Venta");
            double precio_compra = rs.getDouble("Precio_Compra");
            double descuento = rs.getDouble("Descuento");
            model.addRow(new Object[] { id,lote, nombre, descripcion, Stock, fecha,precio_venta,precio_compra,descuento });
        }
        
        checkStockTable.setModel(model);
        txtBusqueda.setText("");
        rs.close();
        stmt.close();
        conn.close();
    } catch (SQLException ex) {
        ex.printStackTrace();
    }

    }//GEN-LAST:event_searchButtonActionPerformed

    private void checkStockTableMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkStockTableMouseMoved
        
    }//GEN-LAST:event_checkStockTableMouseMoved

    private void checkStockTableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkStockTableMouseEntered
        // Obtener la fila en la que está el mouse
        int row = checkStockTable.rowAtPoint(evt.getPoint());
        // Seleccionar la fila si no está seleccionada
        if (!checkStockTable.isRowSelected(row)) {
            checkStockTable.changeSelection(row, 0, false, false);
        }
    }//GEN-LAST:event_checkStockTableMouseEntered

    private void checkStockTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkStockTableMouseClicked
        int rowIndex = checkStockTable.getSelectedRow();
        int Id = Integer.parseInt(checkStockTable.getValueAt(rowIndex, 0).toString());
        String Lote = checkStockTable.getValueAt(rowIndex, 1).toString();
        String Nombre = checkStockTable.getValueAt(rowIndex, 2).toString();
        String Descripcion = checkStockTable.getValueAt(rowIndex, 3).toString();
        String Stock = checkStockTable.getValueAt(rowIndex, 4).toString();
        String fecha_cad = checkStockTable.getValueAt(rowIndex, 5) != null ? checkStockTable.getValueAt(rowIndex, 5).toString() : "";
        String Precio_pub = checkStockTable.getValueAt(rowIndex, 6).toString();
        String Precio_Compra = checkStockTable.getValueAt(rowIndex, 7).toString();
        String Descuento = checkStockTable.getValueAt(rowIndex, 8).toString();

        ProductInformation pi = new ProductInformation(Id, Lote, Nombre, Descripcion, Stock, fecha_cad, Precio_pub, Precio_Compra, Descuento);
        pi.setVisible(true);
        mostrarDatos();
        
    }//GEN-LAST:event_checkStockTableMouseClicked

    private void LoteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LoteMouseClicked
       
    }//GEN-LAST:event_LoteMouseClicked

    private void LoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoteActionPerformed
        try {
        // Obtener el nombre del producto y el nuevo lote ingresados por el usuario
        int id_prod = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingrese el id del producto:"));
        int nuevoLote = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingrese el nuevo lote para el producto:"));

        // Conectar con la base de datos
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost/miscelanea_palacios","root","");

        // Actualizar el lote del producto en la base de datos
        PreparedStatement ps = con.prepareStatement("UPDATE productos SET lote = ? WHERE ID_Prod = ?");
        ps.setInt(1, nuevoLote);
        ps.setInt(2, id_prod);
        int filasActualizadas = ps.executeUpdate();

        // Verificar si el producto fue actualizado exitosamente
        if (filasActualizadas > 0) {
            JOptionPane.showMessageDialog(null, "Lote actualizado exitosamente para el producto: " + id_prod);
        } else {
            JOptionPane.showMessageDialog(null, "No se encontró ningún producto con clave: " + id_prod);
        }

        // Cerrar la conexión con la base de datos
        con.close();
    } catch (SQLException ex) {
        Logger.getLogger(ProductDB.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_LoteActionPerformed

    private void backMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_backMousePressed

    private void backMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseReleased
       back.setBackground(new Color(0, 150, 136));
    }//GEN-LAST:event_backMouseReleased

    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_backMouseClicked

    private void backMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseExited
        back.setBackground(new Color(0, 150, 136));
    }//GEN-LAST:event_backMouseExited

    private void backMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseEntered
        back.setBackground(new Color(0, 137, 123));
    }//GEN-LAST:event_backMouseEntered

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        AdminPanel da = new AdminPanel();
        da.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backActionPerformed

    private void precio_compraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_precio_compraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_precio_compraActionPerformed

    private void PrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrecioActionPerformed
        try {
        // Obtener el nombre del producto y el nuevo lote ingresados por el usuario
        int id_prod = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingrese el id del producto:"));
        int nuevoLote = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingrese el nuevo precio para el producto:"));

        // Conectar con la base de datos
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost/miscelanea_palacios","root","");

        // Actualizar el lote del producto en la base de datos
        PreparedStatement ps = con.prepareStatement("UPDATE productos SET Precio_Venta = ? WHERE ID_Prod = ?");
        ps.setInt(1, nuevoLote);
        ps.setInt(2, id_prod);
        int filasActualizadas = ps.executeUpdate();

        // Verificar si el producto fue actualizado exitosamente
        if (filasActualizadas > 0) {
            JOptionPane.showMessageDialog(null, "Precio actualizado exitosamente para el producto: " + id_prod);
        } else {
            JOptionPane.showMessageDialog(null, "No se encontró ningún producto con clave: " + id_prod);
        }

        // Cerrar la conexión con la base de datos
        con.close();
    } catch (SQLException ex) {
        Logger.getLogger(ProductDB.class.getName()).log(Level.SEVERE, null, ex);
    }
        mostrarDatos();
    }//GEN-LAST:event_PrecioActionPerformed

    private void NombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NombreActionPerformed
        try {
        // Obtener el nombre del producto y el nuevo lote ingresados por el usuario
        int id_prod = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingrese el id del producto:"));
        String nuevoNombre= JOptionPane.showInputDialog(null, "Ingrese el nuevo nombre para el producto:");

        // Conectar con la base de datos
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost/miscelanea_palacios","root","");

        // Actualizar el lote del producto en la base de datos
        PreparedStatement ps = con.prepareStatement("UPDATE productos SET Nombre=? WHERE ID_Prod = ?");
        ps.setString(1, nuevoNombre);
        ps.setInt(2, id_prod);
        int filasActualizadas = ps.executeUpdate();

        // Verificar si el producto fue actualizado exitosamente
        if (filasActualizadas > 0) {
            JOptionPane.showMessageDialog(null, "Nombre actualizado exitosamente para el producto: " + id_prod);
        } else {
            JOptionPane.showMessageDialog(null, "No se encontró ningún producto con clave: " + id_prod);
        }

        // Cerrar la conexión con la base de datos
        con.close();
    } catch (SQLException ex) {
        Logger.getLogger(ProductDB.class.getName()).log(Level.SEVERE, null, ex);
    }
        mostrarDatos();
    }//GEN-LAST:event_NombreActionPerformed

    private void DescuentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DescuentoActionPerformed
        try {
        // Obtener el nombre del producto y el nuevo lote ingresados por el usuario
        int id_prod = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingrese el id del producto:"));
        int nuevoLote = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingrese el nuevo descuento para el producto:"));

        // Conectar con la base de datos
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost/miscelanea_palacios","root","");

        // Actualizar el lote del producto en la base de datos
        PreparedStatement ps = con.prepareStatement("UPDATE productos SET Descuento = ? WHERE ID_Prod = ?");
        ps.setInt(1, nuevoLote);
        ps.setInt(2, id_prod);
        int filasActualizadas = ps.executeUpdate();

        // Verificar si el producto fue actualizado exitosamente
        if (filasActualizadas > 0) {
            JOptionPane.showMessageDialog(null, "Descuento actualizado exitosamente para el producto: " + id_prod);
        } else {
            JOptionPane.showMessageDialog(null, "No se encontró ningún producto con clave: " + id_prod);
        }

        // Cerrar la conexión con la base de datos
        con.close();
    } catch (SQLException ex) {
        Logger.getLogger(ProductDB.class.getName()).log(Level.SEVERE, null, ex);
    }
        mostrarDatos();
    }//GEN-LAST:event_DescuentoActionPerformed

    private void Precio_CompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Precio_CompraActionPerformed
        try {
        // Obtener el nombre del producto y el nuevo lote ingresados por el usuario
        int id_prod = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingrese el id del producto:"));
        Double precio_c = Double.parseDouble(JOptionPane.showInputDialog(null, "Ingrese el nuevo precio de compra para el producto:"));

        // Conectar con la base de datos
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost/miscelanea_palacios","root","");

        // Actualizar el lote del producto en la base de datos
        PreparedStatement ps = con.prepareStatement("UPDATE productos SET Precio_Compra = ? WHERE ID_Prod = ?");
        ps.setDouble(1, precio_c);
        ps.setInt(2, id_prod);
        int filasActualizadas = ps.executeUpdate();

        // Verificar si el producto fue actualizado exitosamente
        if (filasActualizadas > 0) {
            JOptionPane.showMessageDialog(null, "Precio de Compra actualizado exitosamente para el producto: " + id_prod);
        } else {
            JOptionPane.showMessageDialog(null, "No se encontró ningún producto con clave: " + id_prod);
        }

        // Cerrar la conexión con la base de datos
        con.close();
    } catch (SQLException ex) {
        Logger.getLogger(ProductDB.class.getName()).log(Level.SEVERE, null, ex);
    }
        mostrarDatos();
    }//GEN-LAST:event_Precio_CompraActionPerformed

    private void txtBusquedaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) { // Verificar si se presiona la tecla Enter
        searchButton.doClick(); // Establecer el foco en el siguiente JTextField
        }
    }//GEN-LAST:event_txtBusquedaKeyPressed

    private void DescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DescripcionActionPerformed
       try {
        // Obtener el nombre del producto y el nuevo lote ingresados por el usuario
        int id_prod = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingrese el id del producto:"));
        String nuevoNombre= JOptionPane.showInputDialog(null, "Ingrese el nuevo nombre para el producto:");

        // Conectar con la base de datos
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost/miscelanea_palacios","root","");

        // Actualizar el lote del producto en la base de datos
        PreparedStatement ps = con.prepareStatement("UPDATE productos SET Descripcion = ? WHERE ID_Prod = ?");
        ps.setString(1, nuevoNombre);
        ps.setInt(2, id_prod);
        int filasActualizadas = ps.executeUpdate();

        // Verificar si el producto fue actualizado exitosamente
        if (filasActualizadas > 0) {
            JOptionPane.showMessageDialog(null, "Descripcion Actualizada Correctamente: " + id_prod);
        } else {
            JOptionPane.showMessageDialog(null, "No se encontró ningún producto con clave: " + id_prod);
        }

        // Cerrar la conexión con la base de datos
        con.close();
    } catch (SQLException ex) {
        Logger.getLogger(ProductDB.class.getName()).log(Level.SEVERE, null, ex);
    }
        mostrarDatos();
    }//GEN-LAST:event_DescripcionActionPerformed

    private void loteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_loteKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) { // Verificar si se presiona la tecla Enter
        nombre.requestFocus(); // Establecer el foco en el siguiente JTextField
        }
    }//GEN-LAST:event_loteKeyPressed

    private void nombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) { // Verificar si se presiona la tecla Enter
        precio_venta.requestFocus(); // Establecer el foco en el siguiente JTextField
        }
    }//GEN-LAST:event_nombreKeyPressed

    private void precio_compraKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precio_compraKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) { // Verificar si se presiona la tecla Enter
        stock.requestFocus(); // Establecer el foco en el siguiente JTextField
        }
    }//GEN-LAST:event_precio_compraKeyPressed

    private void precio_ventaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precio_ventaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) { // Verificar si se presiona la tecla Enter
        precio_compra.requestFocus(); // Establecer el foco en el siguiente JTextField
        }
    }//GEN-LAST:event_precio_ventaKeyPressed

    private void descripcionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descripcionKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) { // Verificar si se presiona la tecla Enter
        GrabarButton.doClick(); // Establecer el foco en el siguiente JTextField
        }
    }//GEN-LAST:event_descripcionKeyPressed
    void mostrarDatos(){
            DefaultTableModel model =  (DefaultTableModel) checkStockTable.getModel();
        model.setRowCount(0);

        ArrayList<ProductList> list = ProductDB.checkStock();

        Object data[] = new Object[10];

        for(int i=0; i<list.size(); i++){
            data[0] = list.get(i).getID_producto();
            data[1] = list.get(i).getLote();
            data[2] = list.get(i).getNombre();
            data[3] = list.get(i).getDescripcion();
            data[4] = list.get(i).getStock();
            data[5] = list.get(i).getFecha_cad();
            data[6] = list.get(i).getPrecio_Compra();
            data[7] = list.get(i).getPrecio_Venta();
            data[8] = list.get(i).getDescuento();
            
            data[9] = "Producto";

            model.addRow(data);
        }

        list.clear();
        }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Producto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Producto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Producto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Producto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Producto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Descripcion;
    private javax.swing.JMenuItem Descuento;
    private javax.swing.JMenuItem Fecha_Cad;
    private javax.swing.JButton GrabarButton;
    private javax.swing.JMenuItem Lote;
    private javax.swing.JMenuItem Nombre;
    private javax.swing.JMenuItem Precio;
    private javax.swing.JMenuItem Precio_Compra;
    private javax.swing.JMenuItem Stock;
    private javax.swing.JButton back;
    private javax.swing.JButton checkStockButton;
    private javax.swing.JPanel checkStockPanel;
    private javax.swing.JTable checkStockTable;
    private javax.swing.JButton delEntry;
    private javax.swing.JTextField delEntryModel;
    private javax.swing.JTextArea descripcion;
    private javax.swing.JTextField descuento;
    private com.toedter.calendar.JDateChooser fecha_cad1;
    private javax.swing.JPanel homePanel;
    private javax.swing.JPanel insertPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField lote;
    private javax.swing.JTextField nombre;
    private javax.swing.JTextField precio_compra;
    private javax.swing.JTextField precio_venta;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField stock;
    private javax.swing.JTextField stockUpdateId;
    private javax.swing.JTextField stockUpdateSetQty;
    private javax.swing.JTextField txtBusqueda;
    private javax.swing.JButton updateButton;
    private javax.swing.JButton updateStockButton;
    // End of variables declaration//GEN-END:variables
}
